//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AirplaneDB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AirportContext : DbContext
    {
        public AirportContext()
            : base("name=AirportContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Arrival> Arrivals { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Departure> Departures { get; set; }
        public virtual DbSet<Flight> Flights { get; set; }
        public virtual DbSet<FStatu> FStatus { get; set; }
        public virtual DbSet<Schedule> Schedules { get; set; }
    
        public virtual int GenerateSchedule(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<System.Guid> flightId)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var flightIdParameter = flightId.HasValue ?
                new ObjectParameter("flightId", flightId) :
                new ObjectParameter("flightId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerateSchedule", startDateParameter, endDateParameter, flightIdParameter);
        }
    }
}

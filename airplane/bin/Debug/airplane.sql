/*
Deployment script for airplane

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "airplane"
:setvar DefaultFilePrefix "airplane"
:setvar DefaultDataPath "C:\Users\mciesla\AppData\Local\Microsoft\VisualStudio\SSDT\airplane"
:setvar DefaultLogPath "C:\Users\mciesla\AppData\Local\Microsoft\VisualStudio\SSDT\airplane"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating [dbo].[Arrival]...';


GO
CREATE TABLE [dbo].[Arrival] (
    [idArrival]   UNIQUEIDENTIFIER NOT NULL,
    [idCity]      UNIQUEIDENTIFIER NULL,
    [arrivalTime] TIME (7)         NULL,
    PRIMARY KEY CLUSTERED ([idArrival] ASC)
);


GO
PRINT N'Creating [dbo].[City]...';


GO
CREATE TABLE [dbo].[City] (
    [idCity]    UNIQUEIDENTIFIER NOT NULL,
    [idCountry] UNIQUEIDENTIFIER NULL,
    [name]      VARCHAR (50)     NULL,
    PRIMARY KEY CLUSTERED ([idCity] ASC)
);


GO
PRINT N'Creating [dbo].[Company]...';


GO
CREATE TABLE [dbo].[Company] (
    [idCompany] UNIQUEIDENTIFIER NOT NULL,
    [name]      VARCHAR (100)    NULL,
    PRIMARY KEY CLUSTERED ([idCompany] ASC)
);


GO
PRINT N'Creating [dbo].[Country]...';


GO
CREATE TABLE [dbo].[Country] (
    [idCountry] UNIQUEIDENTIFIER NOT NULL,
    [name]      VARCHAR (50)     NULL,
    PRIMARY KEY CLUSTERED ([idCountry] ASC)
);


GO
PRINT N'Creating [dbo].[Departure]...';


GO
CREATE TABLE [dbo].[Departure] (
    [idDeparture]   UNIQUEIDENTIFIER NOT NULL,
    [idCity]        UNIQUEIDENTIFIER NULL,
    [departureTime] TIME (7)         NULL,
    PRIMARY KEY CLUSTERED ([idDeparture] ASC)
);


GO
PRINT N'Creating [dbo].[FDayOfWeek]...';


GO
CREATE TABLE [dbo].[FDayOfWeek] (
    [idFDayOfWeek] UNIQUEIDENTIFIER NOT NULL,
    [name]         VARCHAR (20)     NULL,
    PRIMARY KEY CLUSTERED ([idFDayOfWeek] ASC)
);


GO
PRINT N'Creating [dbo].[Flight]...';


GO
CREATE TABLE [dbo].[Flight] (
    [idFlight]     UNIQUEIDENTIFIER NOT NULL,
    [idCompany]    UNIQUEIDENTIFIER NULL,
    [idFStatus]    UNIQUEIDENTIFIER NULL,
    [idDeparture]  UNIQUEIDENTIFIER NULL,
    [idArrival]    UNIQUEIDENTIFIER NULL,
    [idFDayOfWeek] UNIQUEIDENTIFIER NULL,
    [name]         VARCHAR (20)     NULL,
    PRIMARY KEY CLUSTERED ([idFlight] ASC)
);


GO
PRINT N'Creating [dbo].[FStatus]...';


GO
CREATE TABLE [dbo].[FStatus] (
    [idFStatus] UNIQUEIDENTIFIER NOT NULL,
    [name]      VARCHAR (30)     NULL,
    PRIMARY KEY CLUSTERED ([idFStatus] ASC)
);


GO
PRINT N'Creating [dbo].[Schedule]...';


GO
CREATE TABLE [dbo].[Schedule] (
    [idSchedule] UNIQUEIDENTIFIER NOT NULL,
    [idFlight]   UNIQUEIDENTIFIER NULL,
    [Fdate]      DATE             NULL,
    PRIMARY KEY CLUSTERED ([idSchedule] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[Arrival]...';


GO
ALTER TABLE [dbo].[Arrival] WITH NOCHECK
    ADD FOREIGN KEY ([idCity]) REFERENCES [dbo].[City] ([idCity]);


GO
PRINT N'Creating unnamed constraint on [dbo].[City]...';


GO
ALTER TABLE [dbo].[City] WITH NOCHECK
    ADD FOREIGN KEY ([idCountry]) REFERENCES [dbo].[Country] ([idCountry]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Departure]...';


GO
ALTER TABLE [dbo].[Departure] WITH NOCHECK
    ADD FOREIGN KEY ([idCity]) REFERENCES [dbo].[City] ([idCity]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Flight]...';


GO
ALTER TABLE [dbo].[Flight] WITH NOCHECK
    ADD FOREIGN KEY ([idArrival]) REFERENCES [dbo].[Arrival] ([idArrival]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Flight]...';


GO
ALTER TABLE [dbo].[Flight] WITH NOCHECK
    ADD FOREIGN KEY ([idCompany]) REFERENCES [dbo].[Company] ([idCompany]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Flight]...';


GO
ALTER TABLE [dbo].[Flight] WITH NOCHECK
    ADD FOREIGN KEY ([idDeparture]) REFERENCES [dbo].[Departure] ([idDeparture]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Flight]...';


GO
ALTER TABLE [dbo].[Flight] WITH NOCHECK
    ADD FOREIGN KEY ([idFDayOfWeek]) REFERENCES [dbo].[FDayOfWeek] ([idFDayOfWeek]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Flight]...';


GO
ALTER TABLE [dbo].[Flight] WITH NOCHECK
    ADD FOREIGN KEY ([idFStatus]) REFERENCES [dbo].[FStatus] ([idFStatus]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Schedule]...';


GO
ALTER TABLE [dbo].[Schedule] WITH NOCHECK
    ADD FOREIGN KEY ([idFlight]) REFERENCES [dbo].[Flight] ([idFlight]);


GO
PRINT N'Creating [dbo].[GenerateSchedule]...';


GO
CREATE PROCEDURE [dbo].[GenerateSchedule]
	@dateFrom date,
	@dateTo date,
	@flightId uniqueidentifier =NULL
AS
	--SELECT @dateFrom, @dateTo
	select idFlight from [dbo].[Arrival] a inner join [dbo].[Flight] f on a.idArrival=f.idArrival where arrivalTime>@dateTo;
RETURN 0
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.Arrival'), OBJECT_ID(N'dbo.City'), OBJECT_ID(N'dbo.Departure'), OBJECT_ID(N'dbo.Flight'), OBJECT_ID(N'dbo.Schedule'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO

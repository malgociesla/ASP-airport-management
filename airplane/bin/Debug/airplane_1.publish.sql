/*
Deployment script for airport

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "airport"
:setvar DefaultFilePrefix "airport"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL12.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL12.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'The following operation was generated from a refactoring log file e1401776-94d0-4a33-a027-9e249efaed88';

PRINT N'Rename [dbo].[Schedule].[Fdate] to departureDT';


GO
EXECUTE sp_rename @objname = N'[dbo].[Schedule].[Fdate]', @newname = N'departureDT', @objtype = N'COLUMN';


GO
PRINT N'Altering [dbo].[FDayOfWeek]...';


GO
ALTER TABLE [dbo].[FDayOfWeek]
    ADD [no] INT NULL;


GO
PRINT N'Altering [dbo].[Schedule]...';


GO
ALTER TABLE [dbo].[Schedule] ALTER COLUMN [departureDT] DATETIME NULL;


GO
ALTER TABLE [dbo].[Schedule]
    ADD [arrivalDT] DATETIME NULL;


GO
PRINT N'Creating unnamed constraint on [dbo].[FDayOfWeek]...';


GO
ALTER TABLE [dbo].[FDayOfWeek]
    ADD DEFAULT newsequentialid() FOR [idFDayOfWeek];


GO
PRINT N'Creating [dbo].[GenerateSchedule]...';


GO
CREATE PROCEDURE [dbo].[GenerateSchedule]
	@startDate date,
	@endDate date,
	@flightId uniqueidentifier =NULL
AS
	WHILE (@startDate < @endDate)
	BEGIN
	
	SET @startDate=DATEADD(day,1,@startDate); 
	PRINT @startDate
	END

RETURN 0




	--select DATEADD(day,1,'2006-12-13');

	--SELECT @dateFrom, @dateTo
	--select idFlight from [dbo].[Arrival] a inner join [dbo].[Flight] f on a.idArrival=f.idArrival where arrivalTime>@dateTo;

	--today day no
	--SELECT DATEPART(dw,GETDATE());
	--today day name
	--SELECT DATENAME(dw,GETDATE());

	--EXECUTE
	--execute [dbo].[GenerateSchedule] @startDate='2006-12-13', @endDate='2006-12-28';
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e1401776-94d0-4a33-a027-9e249efaed88')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e1401776-94d0-4a33-a027-9e249efaed88')

GO

GO
PRINT N'Update complete.';


GO
